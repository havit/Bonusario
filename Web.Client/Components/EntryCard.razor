<div class="@CssClassHelper.Combine("entry-card", CssClass)">
	@if ((Entry is not null) && EmployeesDataStore.IsLoaded)
	{
		<EditForm EditContext="editContext">
			<FluentValidationValidator />
			<HxFormState Enabled="@(Entry.Submitted is null)">
				<HxCard>
					<BodyTemplate>
						<div class="row g-4">
							@if (!RecipientLocked)
							{
								<div class="col-lg-8">
									<EmployeePicker @bind-Value="Entry.RecipientId" ExcludeCurrentEmployee="true" />
								</div>
							}
							else if (Entry.RecipientId.HasValue)
							{
								<div class="col-lg-8 d-flex align-items-center">
									<h5 class="mb-0">@(RenderAuthor ? "pro " : null) @EmployeesDataStore.GetByKey(Entry.RecipientId.Value).Name

                                    @if (RenderAuthor)
									{
										@(" od ") @EmployeesDataStore.GetByKey(Entry.CreatedById.Value).Name
									}

                                    </h5>
								</div>
							}

							<div class="col-lg-4">
								<HxInputNumber @bind-Value="@Entry.Value" />
							</div>
							<div class="col-lg-12">
                                <HxInputTextArea Placeholder="@(Entry.Submitted is null ? "Oceňuji... (volitelný text)" : null)" @bind-Value="@Entry.Text" />
							</div>
						</div>
						@if (Entry.Created is not null)
						{
							<small class="text-muted">vloženo @Entry.Created.Value.ToShortDateString()</small>
						}

						<div class="d-flex my-2">
							<EntryTagsPicker @bind-Value="Entry.Tags" />
							<HxDropdown CssClass="ms-auto">
								<HxDropdownToggleElement CssClass="entry-visibility-dropdown-toggle float-end" ElementName="div">
									<div class="d-flex gap-1">									
										<HxIcon Icon="GetIconForEntryVisibility(Entry.Visibility)" />				
										<div class="small">@GetEntryVisibilityText(Entry.Visibility)</div>
									</div>
								</HxDropdownToggleElement>

								<HxDropdownMenu Alignment="DropdownMenuAlignment.End">
									<HxDropdownHeader>
										<div class="text-black">Kdo to uvidí?</div>
										<div class="mt-1 fw-normal text-secondary">Vyberte kdo uvidí tento záznam.</div>
									</HxDropdownHeader>

									@foreach (var visibility in Enum.GetValues<EntryVisibility>().Reverse())
									{
										<HxDropdownItem OnClick="() => ChangeEntryVisibility(visibility)">
											<div class="bg-primary d-inline-flex justify-content-center text-white p-1 rounded-circle entry-visibility-icon">
												<HxIcon Icon="GetIconForEntryVisibility(visibility)" />
											</div>
															
											<small>@GetEntryVisibilityText(visibility)</small>
															
											@if (visibility.Equals(Entry.Visibility))
											{
												<HxIcon Icon="BootstrapIcon.Check2" CssClass="ms-auto text-primary float-end" />
											}
										</HxDropdownItem>
									}
								</HxDropdownMenu>
							</HxDropdown>
						</div>
						<div class="d-flex">
							@if (Entry.Submitted is null)
							{
								@if (Entry.Id != default)
								{
									@* <small class="text-muted">koncept</small> *@
									<HxButton Icon="BootstrapIcon.Trash" 
											Color="ThemeColor.Light" 
											Size="ButtonSize.Small"
											CssClass="ms-auto"
											OnClick="HandleDeleteClick" />
								}
								else
								{
									@* <small class="text-muted">nový</small> *@
									<HxButton Color="ThemeColor.Primary"
											OnValidClick="HandleNewClick"
											CssClass="ms-auto"
											Text="Přidat" />
								}
							}
						</div>
					</BodyTemplate>
				</HxCard>
			</HxFormState>
		</EditForm>
	}
</div>