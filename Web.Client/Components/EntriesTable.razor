@if (PeriodId is not null)
{
    @if (remainingPoints is not null)
    {
        var points = remainingPoints.Value - (newEntriesModel?.TotalPointsAssigned ?? 0);
        <div class="row">
            <div class="col-lg-4 offset-lg-8">
                <RemainingPoints Points="points" />
            </div>
        </div>
    }

    <div class="d-flex my-2">
        <HxBadge Color="ThemeColor.Light" TextColor="ThemeColor.Dark" Type="BadgeType.RoundedPill" CssClass="me-1">Koncept</HxBadge>
        <HxBadge Color="ThemeColor.Info" TextColor="ThemeColor.Dark" Type="BadgeType.RoundedPill" CssClass="me-1">Potvrzené</HxBadge>
    </div>

    @if ((employees is not null) && (entries is not null) && (newEntriesModel is not null))
    {
        <EditForm EditContext="newEntriesEditContext">
            <FluentValidationValidator />
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th rowspan="2">Jméno</th>
                            <th rowspan="2">Předchozí</th>
                            <th colspan="5">Nový záznam</th>
                        </tr>
                        <tr>
                            <th>Hodnota</th>
                            <th>Volitelný text</th>
                            <th>Tagy</th>
                        </tr>
                    </thead>

                    <tbody>
                        <AuthorizeView>
                            <Authorized Context="authenticationState">
                                <HxRepeater Data="@(employees.Where(e => e.Email != authenticationState.User.FindFirst("preferred_username")?.Value).OrderBy(e => e.Email))" Context="employee">
                                    <ItemTemplate>
                                        <tr>
                                            <td class="text-nowrap">
                                                @employee.Name
                                            </td>
                                            <td>
                                                @if (entries is not null)
                                        {
                                            foreach (var entry in entries.Where(e => e.RecipientId == employee.EmployeeId).OrderBy(e => e.Created))
                                            {
                                                <HxPopover Title="@GetBadgePopoverTitle(entry)"
                                                   Content="@GetBadgePopoverContent(entry)"
                                                   Html="true"
                                                   Trigger="PopoverTrigger.Hover">
                                                    <HxBadge Color="@(entry.Submitted is null ? ThemeColor.Light : ThemeColor.Info)" TextColor="ThemeColor.Dark" Type="BadgeType.RoundedPill" CssClass="me-1">@entry.Value</HxBadge>
                                                </HxPopover>
                                            }
                                        }
                                    </td>
                                    @{
                                        var newEntry = newEntriesModel.Entries.Single(e => e.RecipientId == employee.EmployeeId);
                                    }
                                    <td>
                                        <HxInputNumber InputSize="InputSize.Small" @bind-Value="newEntry.Value" style="width: 5rem;" />
                                    </td>
                                    <td>
                                        <HxInputText Placeholder="Oceňuji..." InputSize="InputSize.Small" @bind-Value="newEntry.Text" style="width:500px;" />
                                    </td>
                                    <td>
                                        <EntryTagsPicker @bind-Value="newEntry.Tags" />
                                    </td>
                                </tr>
                            </ItemTemplate>
                        </HxRepeater>
                    </Authorized>
                </AuthorizeView>
            </tbody>
            <tfoot>
                <tr>
                    <td class="fw-bold">CELKEM</td>
                    <td class="fw-bold">@entries.Sum(e => e.Value)</td>
                    <td class="fw-bold">@newEntriesModel.TotalPointsAssigned</td>
                    <td colspan="2"></td>
                </tr>
            </tfoot>
        </table>
    </div>
</EditForm>
    }
    else
    {
        @* TODO Placeholders *@
    }

    @if ((entries?.Any(e => e.Submitted is null) ?? false) || (remainingPoints > 0))
    {
        <HxButton EditContext="newEntriesEditContext" OnValidClick="HandleSubmitAllClick" Text="Potvrdit vše" Color="ThemeColor.Danger" />
    }
}